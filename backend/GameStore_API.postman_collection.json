{
  "info": {
    "name": "GameStore API - Complete Collection",
    "description": "Complete API collection for GameStore e-commerce platform with all features including Redis, background services, and inventory management",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "gamestore-api-collection",
    "version": "2.0.0"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-set cookies for session-based requests",
          "if (pm.request.headers.has('Cookie')) {",
          "    pm.request.headers.remove('Cookie');",
          "}",
          "if (pm.environment.get('session_cookie')) {",
          "    pm.request.headers.add({",
          "        key: 'Cookie',",
          "        value: pm.environment.get('session_cookie')",
          "    });",
          "}"
        ]
      }
    }
  ],
  "item": [
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{user_email}}\",\n  \"password\": \"{{user_password}}\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"role\": \"buyer\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('user_id', response.data.user.id);",
                  "    pm.environment.set('auth_token', response.data.token);",
                  "    console.log('User registered successfully');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{user_email}}\",\n  \"password\": \"{{user_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('auth_token', response.data.token);",
                  "    pm.environment.set('refresh_token', response.data.refreshToken);",
                  "    pm.environment.set('session_cookie', pm.cookies.get('connect.sid'));",
                  "    console.log('User logged in successfully');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{admin_email}}\",\n  \"password\": \"{{admin_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('admin_token', response.data.token);",
                  "    pm.environment.set('admin_id', response.data.user.id);",
                  "    console.log('Admin logged in successfully');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/me",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "me"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "üì¶ Products",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/products?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "products"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Featured Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/products/featured",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "featured"]
            }
          }
        },
        {
          "name": "Get Product by Slug",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/products/slug/{{product_slug}}",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "slug", "{{product_slug}}"]
            }
          }
        },
        {
          "name": "Search Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/products/search?q=gaming&category=1&min_price=10&max_price=100",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "gaming"
                },
                {
                  "key": "category",
                  "value": "1"
                },
                {
                  "key": "min_price",
                  "value": "10"
                },
                {
                  "key": "max_price",
                  "value": "100"
                }
              ]
            }
          }
        },
        {
          "name": "Create Product (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Gaming Mouse Pro\",\n  \"description\": \"High-performance gaming mouse with RGB lighting\",\n  \"price\": 79.99,\n  \"category_id\": 1,\n  \"subcategory_id\": 1,\n  \"sku\": \"GM-PRO-001\",\n  \"stock_quantity\": 50,\n  \"is_featured\": true,\n  \"tags\": [\"gaming\", \"mouse\", \"rgb\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/products",
              "host": ["{{base_url}}"],
              "path": ["api", "products"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('product_id', response.data.id);",
                  "    pm.environment.set('product_slug', response.data.slug);",
                  "    console.log('Product created successfully');",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üõí Cart",
      "item": [
        {
          "name": "Get User Cart",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/cart",
              "host": ["{{base_url}}"],
              "path": ["api", "cart"]
            }
          }
        },
        {
          "name": "Add to Cart",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"product_id\": {{product_id}},\n  \"quantity\": 2\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/cart/items",
              "host": ["{{base_url}}"],
              "path": ["api", "cart", "items"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('cart_item_id', response.data.id);",
                  "    console.log('Item added to cart successfully');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Cart Item",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quantity\": 3\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/cart/items/{{cart_item_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "cart", "items", "{{cart_item_id}}"]
            }
          }
        },
        {
          "name": "Get Cart Summary",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/cart/summary",
              "host": ["{{base_url}}"],
              "path": ["api", "cart", "summary"]
            }
          }
        }
      ]
    },
    {
      "name": "üìã Orders",
      "item": [
        {
          "name": "Create Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"items\": [\n    {\n      \"product_id\": {{product_id}},\n      \"quantity\": 1\n    }\n  ],\n  \"shipping_address_id\": 1,\n  \"payment_method_id\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders",
              "host": ["{{base_url}}"],
              "path": ["api", "orders"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('order_id', response.data.id);",
                  "    console.log('Order created successfully');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get User Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders",
              "host": ["{{base_url}}"],
              "path": ["api", "orders"]
            }
          }
        },
        {
          "name": "Get Order Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "{{order_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "‚≠ê Reviews",
      "item": [
        {
          "name": "Get Product Reviews",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/reviews/product/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "reviews", "product", "{{product_id}}"]
            }
          }
        },
        {
          "name": "Create Review",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"rating\": 5,\n  \"title\": \"Amazing Gaming Mouse!\",\n  \"comment\": \"This mouse is perfect for gaming. Great precision and RGB lighting.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/reviews/product/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "reviews", "product", "{{product_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('review_id', response.data.id);",
                  "    console.log('Review created successfully');",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìÇ Categories",
      "item": [
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "categories"]
            }
          }
        },
        {
          "name": "Create Category (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Gaming Accessories\",\n  \"description\": \"High-quality gaming accessories and peripherals\",\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "categories"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('category_id', response.data.id);",
                  "    console.log('Category created successfully');",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìä Inventory Management",
      "item": [
        {
          "name": "Get Product Inventory History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/inventory/product/{{product_id}}/history",
              "host": ["{{base_url}}"],
              "path": ["api", "inventory", "product", "{{product_id}}", "history"]
            }
          }
        },
        {
          "name": "Get Recent Inventory Transactions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/inventory/transactions",
              "host": ["{{base_url}}"],
              "path": ["api", "inventory", "transactions"]
            }
          }
        },
        {
          "name": "Add Stock",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"product_id\": {{product_id}},\n  \"quantity\": 25,\n  \"unit_cost\": 45.00,\n  \"notes\": \"Restocking from supplier\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/inventory/add-stock",
              "host": ["{{base_url}}"],
              "path": ["api", "inventory", "add-stock"]
            }
          }
        },
        {
          "name": "Adjust Stock",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"product_id\": {{product_id}},\n  \"quantity\": -5,\n  \"reason\": \"Damaged items removed\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/inventory/adjust-stock",
              "host": ["{{base_url}}"],
              "path": ["api", "inventory", "adjust-stock"]
            }
          }
        },
        {
          "name": "Get Inventory Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/inventory/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "inventory", "stats"]
            }
          }
        },
        {
          "name": "Get Low Stock Alerts",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/inventory/low-stock?threshold=10",
              "host": ["{{base_url}}"],
              "path": ["api", "inventory", "low-stock"],
              "query": [
                {
                  "key": "threshold",
                  "value": "10"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üë®‚Äçüíº Admin Dashboard",
      "item": [
        {
          "name": "Get Dashboard Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/dashboard",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "dashboard"]
            }
          }
        },
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/users",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "users"]
            }
          }
        },
        {
          "name": "Get All Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/orders",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "orders"]
            }
          }
        },
        {
          "name": "Update Order Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"shipped\",\n  \"tracking_number\": \"TRK123456789\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/admin/orders/{{order_id}}/status",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "orders", "{{order_id}}", "status"]
            }
          }
        },
        {
          "name": "Get All Reviews (Moderation)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/reviews",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "reviews"]
            }
          }
        }
      ]
    },
    {
      "name": "üîÑ Background Services",
      "item": [
        {
          "name": "Get Background Service Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/background/status",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "background", "status"]
            }
          }
        },
        {
          "name": "Process Order Manually",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/admin/background/process-order/{{order_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "background", "process-order", "{{order_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üìÅ File Upload",
      "item": [
        {
          "name": "Upload Product Image",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "image",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "product_id",
                  "value": "{{product_id}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/upload/product-image",
              "host": ["{{base_url}}"],
              "path": ["api", "upload", "product-image"]
            }
          }
        }
      ]
    },
    {
      "name": "üß™ Testing & Health",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          }
        },
        {
          "name": "Test Rate Limiting",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/products",
              "host": ["{{base_url}}"],
              "path": ["api", "products"]
            }
          }
        },
        {
          "name": "Test Cache Headers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "categories"]
            }
          }
        }
      ]
    }
  ]
}